{"version":3,"sources":["/components/utils/ajax.jsx"],"names":[],"mappings":"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","file":"/components/utils/ajax.jsx","sourcesContent":["/*\r\n对ajax层进行一次封装，便于统一处理请求的成功、失败和登录跳转逻辑\r\n同时也可以统一ajax的用法，不会根据用的什么库修改发送ajax的逻辑，\r\n统一在这里修改就行\r\n*/\r\nimport { Message } from 'element-ui';\r\n\r\nwindow.__disableNativeFetch=true;\r\n\r\nvar fetch = require('fetch-ie8');\r\n\r\n\r\nvar successCode=\"1\",\r\n\tfailCode=\"0\",\r\n\tnotLoginCode=\"-99\";\r\n\r\n\r\nfunction ajax(url,data,successCallback,completeCallback,method,faillCallback,dataType,processData,headers){\r\n\tvar dataType=dataType||\"json\";\r\n\tvar method=method||\"post\";\r\n\tvar processData=processData||true;\r\n\r\n\tif(processData){\r\n\t\tif(typeof data != \"string\"){\r\n\t\t\tdata=urlParamsObjTranslator(data);\r\n\t\t}\r\n\t}\r\n\tvar fetchResult=fetch(url+(method==\"get\"?\"?\"+data:\"\"), {\r\n\t  method: method,\r\n\t  headers: headers,\r\n\t  body: method==\"post\"?data:\"\"\r\n\t}).then(status)\r\n\t  .then(json)\r\n\t  .then(function(json) {\r\n\t    console.log('request succeeded with json response', json);\r\n\t    if(String(json.status) === successCode){\r\n\t    \tsuccessCallback&&successCallback(json);\r\n\t    }else if(String(json.status) === failCode){\r\n\t    \tif(typeof faillCallback === \"function\"){\r\n\t\t\t\tfaillCallback&&faillCallback(json);\r\n\t\t\t}else{\r\n\t\t\t\tMessage(json.detail||json.message||json.msg||\"请求失败！\");\r\n\t\t\t}\r\n\t    }else if(String(json.status) === notLoginCode){\r\n\t    \tif(window.loginUrl){\r\n\t    \t\twindow.location.href=window.loginUrl;\r\n\t    \t}\r\n\t    }else{\r\n\t    \tconsole.log('未识别的status码：', json.status)\r\n\t    }\r\n\r\n\t    completeCallback&&completeCallback(json);\r\n\t    \r\n\t  }).catch(function(error) {\r\n\t    console.log('request failed', error)\r\n\t  })\r\n\r\n\tfunction status(response) {\r\n\t  if (response.status >= 200 && response.status < 300) {\r\n\t    return response\r\n\t  }\r\n\t  throw new Error(response.statusText)\r\n\t}\r\n\r\n\tfunction json(response) {\r\n\t\tif(dataType==\"json\"){\r\n\t\t    return response.json()\r\n\t\t}else{\r\n\t\t\treturn response;\r\n\t\t}\r\n\t}\r\n\r\n\treturn fetchResult;\r\n}\r\n\r\nfunction urlParamsObjTranslator(data,type){\r\n    var type=type||'objToUrl';\r\n    var result=null;\r\n\r\n    if(type=='urlToObj'){\r\n        //a=1&b=2&c=3  =>  {a:1,b:2,c:3}\r\n        if(typeof data == 'string'){\r\n            var dataArray=data.split('&');\r\n            result={};\r\n            for(var i=0;i<dataArray.length;i++){\r\n                var dataStr=dataArray[i],\r\n                    dataKey=dataStr.split('=')[0],\r\n                    dataValue=dataStr.split('=')[1];\r\n\r\n                result[dataKey]=dataValue;\r\n            }\r\n        }else{\r\n            console.log('urlToObj方式，data必须为a=x&b=xx格式字符串');\r\n        }\r\n    }else{\r\n        //objToUrl方式 {a:1,b:2,c:3}  => a=1&b=2&c=3\r\n        result=[];\r\n        if(typeof data == 'object') {\r\n            for (var key in data) {\r\n            \tif(data[key]){\r\n            \t\t//如果值不存在，则不放在请求参数里，todo 可能需要改\r\n                    //防止发送的参数值有特殊字符导致发送请求的时候丢失，需要encodeURIComponent处理一下\r\n                    var tmpStr=key+'='+encodeURIComponent(data[key]);\r\n                    result.push(tmpStr);\r\n\t\t\t\t}\r\n            }\r\n            result=result.join('&');\r\n        }else{\r\n            console.log('objToUrl方式，data必须为对象！');\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport default ajax;"]}